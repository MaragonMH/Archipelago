from ..Locations import Loc as Data

# from helper folder
# flake8: noqa
fn_nodes_data: list[Data] = [
Data("FN Node 101 - Prim", regions=["FNet", "Mechanical 5"]),
Data("FN Node 102 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 103 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 104 - Prim", regions=["FNet", "Mechanical 3"]),
Data("FN Node 106 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 108 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 107 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 109 - Prim", regions=["FNet", "Mechanical 2"], depends=["FN Site 109"]), # Skell with transform 
Data("FN Node 110 - Prim", regions=["FNet", "Mechanical 1"], depends=["Talon Rock Summit"]),  # TAJ with Skell
Data("FN Node 111 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 112 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 113 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 114 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 115 - Prim", regions=["FNet", "Mechanical 2"]),
Data("FN Node 116 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 117 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 118 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 119 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 120 - Prim", regions=["FNet", "Mechanical 3"]),
Data("FN Node 121 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 105 - Prim", regions=["FNet", "Mechanical 1"]),
Data("FN Node 201 - Noct", regions=["FNet", "Mechanical 3"], depends=["Divine Roost"]),  # TAJ with Skell
Data("FN Node 202 - Noct", regions=["FNet", "Mechanical 2"]),
Data("FN Node 203 - Noct", regions=["FNet", "Mechanical 2"]),
Data("FN Node 204 - Noct", regions=["FNet", "Mechanical 1"]),
Data("FN Node 205 - Noct", regions=["FNet", "Mechanical 1"]),
Data("FN Node 206 - Noct", regions=["FNet", "Mechanical 5"], depends=["Divine Roost"]),  # TAJ with Skell
Data("FN Node 207 - Noct", regions=["FNet", "Mechanical 2"], depends=["Divine Roost"]),  # TAJ with Skell
Data("FN Node 208 - Noct", regions=["FNet", "Mechanical 2"]),
Data("FN Node 209 - Noct", regions=["FNet", "Mechanical 1"]),
Data("FN Node 210 - Noct", regions=["FNet", "Mechanical 2"]),
Data("FN Node 211 - Noct", regions=["FNet", "Mechanical 2"]),
Data("FN Node 212 - Noct", regions=["FNet", "Mechanical 1"]),
Data("FN Node 213 - Noct", regions=["FNet", "Mechanical 4"], depends=["Divine Roost"]),  # TAJ with Skell
Data("FN Node 214 - Noct", regions=["FNet", "Mechanical 2"]),
Data("FN Node 215 - Noct", regions=["FNet", "Mechanical 2"]),
Data("FN Node 216 - Noct", regions=["FNet", "Mechanical 3"]),
Data("FN Node 217 - Noct", regions=["FNet", "Mechanical 2"]),
Data("FN Node 218 - Noct", regions=["FNet", "Mechanical 1"]),
Data("FN Node 219 - Noct", regions=["FNet", "Mechanical 1"]),
Data("FN Node 220 - Noct", regions=["FNet", "Mechanical 2"]),
Data("FN Node 221 - Noct", regions=["FNet", "Mechanical 1"]),
Data("FN Node 222 - Noct", regions=["FNet", "Mechanical 1"]),
Data("FN Node 223 - Noct", regions=["FNet", "Mechanical 1"]),
Data("FN Node 224 - Noct", regions=["FNet", "Mechanical 4"]),
Data("FN Node 225 - Noct", regions=["FNet", "Mechanical 3"]),
Data("FN Node 206", valid=False),
Data("FN Node 207", valid=False),
Data("FN Node 301 - Obli", regions=["FNet", "Mechanical 1"]),
Data("FN Node 302 - Obli", regions=["FNet", "Mechanical 1"]),
Data("FN Node 303 - Obli", regions=["FNet", "Mechanical 1"]),
Data("FN Node 304 - Obli", regions=["FNet", "Mechanical 5"]),
Data("FN Node 305 - Obli", regions=["FNet", "Mechanical 1"]),
Data("FN Node 306 - Obli", regions=["FNet", "Mechanical 1"]),
Data("FN Node 307 - Obli", regions=["FNet", "Mechanical 3"]),
Data("FN Node 308 - Obli", regions=["FNet", "Mechanical 2"]),
Data("FN Node 309 - Obli", regions=["FNet", "Mechanical 2"]),
Data("FN Node 310 - Obli", regions=["FNet", "Mechanical 2"], depends=["FN Site 310"]),  # Needs advanced jumping
Data("FN Node 311 - Obli", regions=["FNet", "Mechanical 2"]),
Data("FN Node 312 - Obli", regions=["FNet", "Mechanical 2"]),
Data("FN Node 313 - Obli", regions=["FNet", "Mechanical 1"]),
Data("FN Node 314 - Obli", regions=["FNet", "Mechanical 3"]),
Data("FN Node 315 - Obli", regions=["FNet", "Mechanical 3"]),
Data("FN Node 316 - Obli", regions=["FNet", "Mechanical 2"]),
Data("FN Node 317 - Obli", regions=["FNet", "Mechanical 3"]),
Data("FN Node 318 - Obli", regions=["FNet", "Mechanical 2"]),
Data("FN Node 320 - Obli", regions=["FNet", "Mechanical 3"], depends=["Floating Reef"]),  # Technically doable with only Skell but very hard
Data("FN Node 321 - Obli", regions=["FNet", "Mechanical 2"]),
Data("FN Node 319 - Obli", regions=["FNet", "Mechanical 2"]),
Data("FN Node 322 - Obli", regions=["FNet", "Mechanical 4"]),
Data("FN Node 313", valid=False),
Data("FN Node 314", valid=False),
Data("FN Node 315", valid=False),
Data("FN Node 401 - Sylv", regions=["FNet", "Mechanical 2"]),
Data("FN Node 402 - Sylv", regions=["FNet", "Mechanical 3"]),
Data("FN Node 403 - Sylv", regions=["FNet", "Mechanical 1"]),
Data("FN Node 404 - Sylv", regions=["FNet", "Mechanical 5"]),
Data("FN Node 405 - Sylv", regions=["FNet", "Mechanical 1"]),
Data("FN Node 406 - Sylv", regions=["FNet", "Mechanical 3"]),
Data("FN Node 407 - Sylv", regions=["FNet", "Mechanical 4"]),
Data("FN Node 408 - Sylv", regions=["FNet", "Mechanical 1"]),
Data("FN Node 409 - Sylv", regions=["FNet", "Mechanical 3"]),
Data("FN Node 410 - Sylv", regions=["FNet", "Mechanical 4"]),
Data("FN Node 411 - Sylv", regions=["FNet", "Mechanical 4"]),
Data("FN Node 412 - Sylv", regions=["FNet", "Mechanical 3"]),
Data("FN Node 413 - Sylv", regions=["FNet", "Mechanical 3"]),
Data("FN Node 414 - Sylv", regions=["FNet", "Mechanical 2"]),
Data("FN Node 415 - Sylv", regions=["FNet", "Mechanical 3"]),
Data("FN Node 416 - Sylv", regions=["FNet", "Mechanical 3"]),
Data("FN Node 417 - Sylv", regions=["FNet", "Mechanical 2"]),
Data("FN Node 418 - Sylv", regions=["FNet", "Mechanical 2"]),
Data("FN Node 419 - Sylv", regions=["FNet", "Mechanical 5"]),
Data("FN Node 420 - Sylv", regions=["FNet", "Mechanical 2"]),
Data("FN Node 501 - Caul", regions=["FNet", "Mechanical 1"]),
Data("FN Node 502 - Caul", regions=["FNet", "Mechanical 1"]),
Data("FN Node 503 - Caul", regions=["FNet", "Mechanical 2"]),
Data("FN Node 504 - Caul", regions=["FNet", "Mechanical 2"]),
Data("FN Node 505 - Caul", regions=["FNet", "Mechanical 2"]),
Data("FN Node 506 - Caul", regions=["FNet", "Mechanical 3"]),
Data("FN Node 507 - Caul", regions=["FNet", "Mechanical 3"]),
Data("FN Node 508 - Caul", regions=["FNet", "Mechanical 2"]),
Data("FN Node 509 - Caul", regions=["FNet", "Mechanical 2"]),
Data("FN Node 510 - Caul", regions=["FNet", "Mechanical 3"]),
Data("FN Node 511 - Caul", regions=["FNet", "Mechanical 2"]),
Data("FN Node 512 - Caul", regions=["FNet", "Mechanical 4"]),
Data("FN Node 513 - Caul", regions=["FNet", "Mechanical 4"]),
Data("FN Node 514 - Caul", regions=["FNet", "Mechanical 3"]),
Data("FN Node 515 - Caul", regions=["FNet", "Mechanical 3"]),
Data("FN Node 516 - Caul", regions=["FNet", "Mechanical 1"]),
]
# get vein_ids https://xenoblade.github.io/xbx/bdat/common_local_us/SEG_ProbeList.html from game as NodeId
# https://xenoblade.github.io/xbx/bdat/common_local_us/FnetVeinList.html to match name in
# https://xenoblade.github.io/xbx/bdat/common_local_us/FLD_Location.html